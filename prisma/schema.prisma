generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum ProduceType {
  Vegetable
  SpecialtyVegetable
  Fruit
  Berry
  StoneFruit
  SpecialtyFruit
  EdibleFlower
  Herb
}

enum AvailabilityType {
  Available
  Limited
  Unavailable
  Imported
  LimitedImported
}

model Produce {
  id            Int          @id @default(autoincrement())
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  title         String
  type          ProduceType
  description   String       @default("")
  image         String       @default("")
  authorId      String
  seasonality   Seasonality  @relation(fields: [seasonalityId], references: [id])
  seasonalityId Int
  Ingredient    Ingredient[]

  @@index([authorId])
  @@index([seasonalityId])
}

model Seasonality {
  id        Int              @id @default(autoincrement())
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  january   AvailabilityType
  february  AvailabilityType
  march     AvailabilityType
  april     AvailabilityType
  may       AvailabilityType
  june      AvailabilityType
  july      AvailabilityType
  august    AvailabilityType
  september AvailabilityType
  october   AvailabilityType
  november  AvailabilityType
  december  AvailabilityType
  Produce   Produce[]
}

model Recipe {
  id                 Int                 @id @default(autoincrement())
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  title              String
  byline             String              @default("")
  description        String              @default("")
  smallImage         String              @default("")
  mediumImage        String              @default("")
  largeImage         String              @default("")
  authorId           String
  ingredientSegments IngredientSegment[]
  instructions       Instruction[]
  tags               TagsOnRecipes[]

  @@index([authorId])
}

model IngredientSegment {
  id          Int          @id @default(autoincrement())
  title       String
  ingredients Ingredient[]
  recipe      Recipe       @relation(fields: [recipeId], references: [id])
  recipeId    Int

  @@index([recipeId])
}

model Ingredient {
  id        Int               @id @default(autoincrement())
  amount    String
  unit      String
  name      String
  segment   IngredientSegment @relation(fields: [segmentId], references: [id])
  segmentId Int
  produce   Produce?          @relation(fields: [produceId], references: [id])
  produceId Int?

  @@index([segmentId])
  @@index([produceId])
}

model Instruction {
  id       Int    @id @default(autoincrement())
  title    String
  content  String
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId Int

  @@index([recipeId])
}

model Tag {
  id      Int             @id @default(autoincrement())
  name    String
  recipes TagsOnRecipes[]
}

model TagsOnRecipes {
  id       Int    @id @default(autoincrement())
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId Int
  tag      Tag    @relation(fields: [tagId], references: [id])
  tagId    Int

  @@index([recipeId])
  @@index([tagId])
}
